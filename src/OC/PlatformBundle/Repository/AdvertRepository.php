<?php

namespace OC\PlatformBundle\Repository;


use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAdvertWithCategories(array $categoryNames)
    {
        $qb = $this
            ->createQueryBuilder('a')
            ->innerJoin('a.categories', 'cat')
            ->addSelect('c');

        $qb->where($qb->expr()->in('c.name', $categoryNames));

        return $qb->getQuery()->getResult();
    }
    public function getAdverts($page, $nbPerPage)
    {
        $qb = $this
            ->createQueryBuilder('a')
            //->orderBy('a.date', 'DESC')
            ->leftJoin('a.categories', 'cat')
            ->addSelect('cat')
            ->leftJoin('a.applications', 'app')
            ->addSelect('app')
            ->leftJoin('a.image', 'img')
            ->addSelect('img')
            ->getQuery();

        return new Paginator($qb, true);
    }
    public function getAdvertsWithoutApplication($day)
    {
        $qb = $this->createQueryBuilder('a');
        $qb->delete()
            ->where("DATE_ADD(a.date, :day, 'DAY') <= CURRENT_DATE()")
            ->setParameter('day', $day)
            ->andWhere('a.applications IS EMPTY');
            //->orderBy('a.date', 'DESC');


        return $qb->getQuery()->getResult();
    }
    public function getAdvertByApplicationAuthor($user)
    {
        $qb = $this
            ->createQueryBuilder('a')
            ->innerJoin('a.applications', 'applications')
            ->addSelect('applications')
            ->where("applications.author IN (:user)")
            ->setParameter('user', $user)
            ->orderBy('applications.date', 'DESC');

        return $qb->getQuery()->getResult();
    }
}
